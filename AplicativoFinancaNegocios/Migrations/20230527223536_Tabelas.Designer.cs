// <auto-generated />
using System;
using AplicativoFinancaNegocios.DataBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataBase.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20230527223536_Tabelas")]
    partial class Tabelas
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("DTO.Models.Estoque.HistoricoEstoque", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Ativo")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CorId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataAuditoriaRegistro")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataRegistro")
                        .HasColumnType("TEXT");

                    b.Property<int?>("MarcaId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaterialId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Operacao")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("PrecoPago")
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantidade")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CorId");

                    b.HasIndex("MarcaId");

                    b.HasIndex("MaterialId");

                    b.ToTable("HistoricoEstoques");
                });

            modelBuilder.Entity("DTO.Models.Financeiro.Financeiro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Ativo")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("CustoTotal")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataAuditoriaRegistro")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataRegistro")
                        .HasColumnType("TEXT");

                    b.Property<int>("DiasNoMes")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DiasPorSemana")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HorasPorDia")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TempoDeProducaoPorMinuto")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TipoTransacaoFinanceira")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Financas");
                });

            modelBuilder.Entity("DTO.Models.Imagem.Imagem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Ativo")
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("BytesDaImagem")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<DateTime>("DataAuditoriaRegistro")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataRegistro")
                        .HasColumnType("TEXT");

                    b.Property<string>("NomeDoArquivo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("ProdutoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoId");

                    b.ToTable("Imagens");
                });

            modelBuilder.Entity("DTO.Models.Materiais.Cor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Ativo")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataAuditoriaRegistro")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataRegistro")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Cores");
                });

            modelBuilder.Entity("DTO.Models.Materiais.Marca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Ativo")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataAuditoriaRegistro")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataRegistro")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Marcas");
                });

            modelBuilder.Entity("DTO.Models.Materiais.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Ativo")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataAuditoriaRegistro")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataRegistro")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("TEXT");

                    b.Property<double>("PesoEmbalagem")
                        .HasColumnType("REAL");

                    b.Property<double>("PesoQTDOriginal")
                        .HasColumnType("REAL");

                    b.Property<decimal>("PrecoPadrao")
                        .HasColumnType("TEXT");

                    b.Property<int>("UnidadeDeMedidaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UnidadeDeMedidaId");

                    b.ToTable("Materiais");
                });

            modelBuilder.Entity("DTO.Models.Materiais.UnidadeDeMedida", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Abreviacao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Ativo")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataAuditoriaRegistro")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataRegistro")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("UnidadesDeMedida");
                });

            modelBuilder.Entity("DTO.Models.Produtos.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Ativo")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataAuditoriaRegistro")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataRegistro")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("LucroPorcentagem")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("ValorAnunciado")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("DTO.Models.Produtos.ProdutoComposicao", b =>
                {
                    b.Property<int>("ProdutoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaterialId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Ativo")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataAuditoriaRegistro")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataRegistro")
                        .HasColumnType("TEXT");

                    b.Property<double>("Quantidade")
                        .HasColumnType("REAL");

                    b.HasKey("ProdutoId", "MaterialId");

                    b.HasIndex("MaterialId");

                    b.ToTable("ProdutoComposicoes");
                });

            modelBuilder.Entity("DTO.Models.Estoque.HistoricoEstoque", b =>
                {
                    b.HasOne("DTO.Models.Materiais.Cor", "Cor")
                        .WithMany()
                        .HasForeignKey("CorId");

                    b.HasOne("DTO.Models.Materiais.Marca", "Marca")
                        .WithMany()
                        .HasForeignKey("MarcaId");

                    b.HasOne("DTO.Models.Materiais.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cor");

                    b.Navigation("Marca");

                    b.Navigation("Material");
                });

            modelBuilder.Entity("DTO.Models.Imagem.Imagem", b =>
                {
                    b.HasOne("DTO.Models.Produtos.Produto", null)
                        .WithMany("Imagens")
                        .HasForeignKey("ProdutoId");
                });

            modelBuilder.Entity("DTO.Models.Materiais.Material", b =>
                {
                    b.HasOne("DTO.Models.Materiais.UnidadeDeMedida", "UnidadeDeMedida")
                        .WithMany()
                        .HasForeignKey("UnidadeDeMedidaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UnidadeDeMedida");
                });

            modelBuilder.Entity("DTO.Models.Produtos.ProdutoComposicao", b =>
                {
                    b.HasOne("DTO.Models.Materiais.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DTO.Models.Produtos.Produto", "Produto")
                        .WithMany("ComposicoesDoProduto")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Material");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("DTO.Models.Produtos.Produto", b =>
                {
                    b.Navigation("ComposicoesDoProduto");

                    b.Navigation("Imagens");
                });
#pragma warning restore 612, 618
        }
    }
}
